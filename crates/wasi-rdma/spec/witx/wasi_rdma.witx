  (typename $rdma_error
    (enum (@witx tag u16)
        $success
        $runtime_error
        $io_error
     )
  )

(typename $ibv_mr (handle))
(typename $ibv_wc (handle))
;;;(typename $conn_param (handle))
(typename $rdma_addrinfo_struct
(record
(field $flags s32)
(field $port_space s32)
(field $family s32)
(field $qp_type s32)
(field $src_len u32)
(field $dst_len u32)
))
(typename $ibv_qp_cap
(record
(field $max_send_wr u32)
(field $max_recv_wr u32)
(field $max_send_sge u32)
(field $max_recv_sge u32)
(field $max_inline_data u32)
))
(typename $rdma (handle))
(typename $rdma_cq (handle))
(typename $ep_pd (handle))

(module $wasi_rdma
 (import "memory" (memory))
(@interface func (export "rdma_init")
(param $node string)
(param $service string)
(param $hints $rdma_addrinfo_struct)
(param $cap $ibv_qp_cap)
(param $is_server u8)

(result $error (expected $rdma (error $rdma_error)))
)
(@interface func (export "rdma_connect")
(param $rdma $rdma)
(result $error (expected (error $rdma_error)))
)
(@interface func (export "rdma_disconnect")
(param $rdma $rdma)
(result $error (expected (error $rdma_error)))
)
(@interface func (export "rdma_get_send_comp")
(param $rdma $rdma)
(param $wc $ibv_wc)
(result $error (expected $ibv_wc (error $rdma_error)))
)
(@interface func (export "rdma_get_recv_comp")
(param $rdma $rdma)
(param $wc $ibv_wc)
(result $error (expected $ibv_wc (error $rdma_error)))
)
(@interface func (export "rdma_reg_msgs")
(param $rdma $rdma)
(param $addr (@witx pointer u8))
(param $size u32)
(result $error (expected $ibv_mr (error $rdma_error)))
)
(@interface func (export "rdma_dereg_mr")
(param $ibv_mr $ibv_mr)
)
(@interface func (export "rdma_post_send")
(param $rdma $rdma)
(param $addr (@witx pointer u8))
(param $size u32)
(param $send_mr $ibv_mr)
(param $flags u32)
(result $error (expected (error $rdma_error)))
)
(@interface func (export "rdma_post_recv")
(param $rdma $rdma)
(param $addr (@witx pointer u8))
(param $size u32)
(param $recv_mr $ibv_mr)
(result $error (expected (error $rdma_error)))
)
(@interface func (export "ibv_query_qp")
(param $rdma $rdma)
(param $ibv_qp_attrmask u32)
(result $error (expected (error $rdma_error)))
)
)
